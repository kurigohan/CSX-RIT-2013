head	1.6;
access;
symbols;
locks
	andy:1.6; strict;
comment	@# @;


1.6
date	2013.11.15.00.31.04;	author andy;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.14.23.46.47;	author andy;	state Exp;
branches;
next	1.4;

1.4
date	2013.11.14.23.12.13;	author andy;	state Exp;
branches;
next	1.3;

1.3
date	2013.11.14.22.32.18;	author andy;	state Exp;
branches;
next	1.2;

1.2
date	2013.11.14.22.15.52;	author andy;	state Exp;
branches;
next	1.1;

1.1
date	2013.11.14.21.57.05;	author andy;	state Exp;
branches;
next	;


desc
@Lab 12: Activity 2 Woolie
@


1.6
log
@Using Synchronized statement
@
text
@/**
 * The Woolie class simulates a Woolie crossing the bridge.
 *
 * @@author Andy Nguyen
 */

import java.util.*;
public class Woolie implements Runnable {
    // name of the Woolie
    private String name = ""; 
     // city the Woolie is heading to
    private String destination = "";
    // number of secods it takes the Woolie to cross the bridge
    private int crossingTime = 0; 
    // bridge the Woolie is crossing
    private Bridge bridge = null;

    /**
     * Main method. Creates multiple Woolies with different names, corssing 
     * times and destinations for testing.
     *
     * @@exception NumberFormatException if invalid number entered for 
     * command line arg
     */
    public static void main( String args[] ) throws NumberFormatException {
        Bridge testBridge = new Bridge();
        // create threads
        Thread w1 = new Thread( new Woolie( "Tom", 10, "Merctan", testBridge ) );
        Thread w2 = new Thread( new Woolie( "Jerry", 8, "Merctan", testBridge ) );
        Thread w3 = new Thread( new Woolie( "Bugs", 4, "Sicstine", testBridge ) );
        Thread w4 = new Thread( new Woolie( "Daffy", 14, "Merctan", testBridge ) );
        // start threads
        w1.start();
        w2.start();
        w3.start();
        w4.start();
    }


    /**
     * Construct a new Woolie object.
     *
     * @@param myName                    name of the Woolie
     * @@param myCrossingTime       seconds it takes the Woolie to cross the bridge
     * @@param myDestination           city the Woolie is heading to
     */
    public Woolie( String myName, int myCrossingTime, String myDestination, 
                                Bridge myBridge ) {
        name = myName;
        crossingTime = myCrossingTime;
        destination = myDestination;
        bridge = myBridge;
    }

    /**
     * Handles the Woolie's crossing of the bridge.
     */
    public void run() {
        System.out.println( name + " has arrived at the bridge.");
        synchronized( bridge ) { // get lock

            bridge.enterBridge();
            
            System.out.println( name + " is starting to cross.");
            
            for( int i = 1; i <= crossingTime; ++i ) {
                try{
                    Thread.sleep( 1000 ); 
                }
                catch( InterruptedException e ) {}
                System.out.println( "\t" + name + " " + i + " seconds." );
            }

            bridge.leaveBridge();
            
            System.out.println( name + " leaves at " + destination + "." );
        
        }
    }
}


/*
 * Woolie.java
 * 
 * Version: 
 *     $Id: Woolie.java,v 1.5 2013/11/14 23:46:47 andy Exp andy $
 * 
 * Revisions: 
 *     $Log: Woolie.java,v $
 *     Revision 1.5  2013/11/14 23:46:47  andy
 *     Modified constructor to take an additional parameter, bridge.
 *     Modified run to use Bridge class for activity 3.
 *
 *     Revision 1.4  2013/11/14 23:12:13  andy
 *     Modified run method to match required output for lab.
 *
 *     Revision 1.3  2013/11/14 22:32:18  andy
 *     Implemented run method.
 *
 *     Revision 1.2  2013/11/14 22:15:52  andy
 *     Added constructor and comments.
 *
 *     Revision 1.1  2013/11/14 21:57:05  andy
 *     Initial revision
 *
 *
 */@


1.5
log
@Modified constructor to take an additional parameter, bridge.
Modified run to use Bridge class for activity 3.
@
text
@d60 2
a61 1
        synchronized( bridge ) {
d63 9
a71 6
        
        System.out.println( name + " is starting to cross.");
        
        for( int i = 1; i <= crossingTime; ++i ) {
            try{
                Thread.sleep( 1000 ); 
a72 3
            catch( InterruptedException e ) {}
            System.out.println( "\t" + name + " " + i + " seconds." );
        }
d74 3
a76 1
        bridge.leaveBridge();
a77 1
        System.out.println( name + " leaves at " + destination + "." );
d87 1
a87 1
 *     $Id: Woolie.java,v 1.4 2013/11/14 23:12:13 andy Exp andy $
d91 4
@


1.4
log
@Modified run method to match required output for lab.
@
text
@d15 2
d26 7
a32 5
        Thread w1 = new Thread( new Woolie( "Tom", 10, "Merctan" ) );
        Thread w2 = new Thread( new Woolie( "Jerry", 8, "Merctan" ) );
        Thread w3 = new Thread( new Woolie( "Bugs", 4, "Sicstine" ) );
        Thread w4 = new Thread( new Woolie( "Daffy", 14, "Merctan" ) );

d47 2
a48 1
    public Woolie( String myName, int myCrossingTime, String myDestination) {
d52 1
d60 3
d65 1
a65 1
        for( int i = 0; i < crossingTime; ++i ) {
d67 1
a67 1
                Thread.sleep( 1000 );
d73 2
d76 1
d85 1
a85 1
 *     $Id: Woolie.java,v 1.3 2013/11/14 22:32:18 andy Exp andy $
d89 3
@


1.3
log
@Implemented run method.
@
text
@d17 20
d50 1
a50 1
     * Handles the Woolie's crossing of the bridge
d60 2
a61 3
            catch( InterruptedException e ) {
                System.out.println( "\t" + name + " " + i + " seconds.");
             }
d64 1
a64 1
        System.out/println( name + " leaves at " + destination + "." );
d73 1
a73 1
 *     $Id: Woolie.java,v 1.2 2013/11/14 22:15:52 andy Exp andy $
d77 3
@


1.2
log
@Added constructor and comments.
@
text
@d9 6
a14 3
    private String name = ""; // name of the Woolie
    private String destination = ""; // destination of the Woolie
    private int crossingTime = 0; // crossing time of the Woolie
d20 2
a21 2
     * @@param myCrossingTime        time it takes to cross the bridge
     * @@param myDestination            destination of the Woolie
d33 11
d45 1
d54 1
a54 1
 *     $Id: Woolie.java,v 1.1 2013/11/14 21:57:05 andy Exp andy $
d58 3
@


1.1
log
@Initial revision
@
text
@d7 5
a11 1
public class Woolie {
d13 12
d26 4
d31 1
d39 1
a39 1
 *     $Id$
d42 4
a45 1
 *     $Log$
@
