head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2013.09.15.01.12.05;	author agn3691;	state Exp;
branches;
next	1.4;

1.4
date	2013.09.15.01.05.01;	author agn3691;	state Exp;
branches;
next	1.3;

1.3
date	2013.09.15.00.45.37;	author agn3691;	state Exp;
branches;
next	1.2;

1.2
date	2013.09.14.22.22.58;	author agn3691;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.17.14.37.28;	author cs2;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Forgot to add statement in earnedInterest method.
@
text
@/*
 * SavingsAccount.java
 * 
 * Version: 
 *     $Id: SavingsAccount.java,v 1.3 2013/09/15 00:45:37 agn3691 Exp agn3691 $
 * 
 * Revisions: 
 *     $Log: SavingsAccount.java,v $
 *     Revision 1.3  2013/09/15 00:45:37  agn3691
 *     Fixed error with interest rate formula.
 *
 *     Revision 1.2  2013/09/14 22:22:58  agn3691
 *     Implemented methods.
 *     /
 *
 *     Revision 1.1  2003/03/17 14:37:28  cs2
 *     Initial revision
 *
 */

/**
 * The SavingsAccount class represents a generic bank account. 
 * 
 * @@author Andy Nguyen
 */

public class SavingsAccount extends BankAccount {

    /**
     * The interest rate for a standard savings account is currently 3%.
     */
    private static final int INTEREST_RATE = 3;

    /**
     * A constructor for a SavingsAccount object. It accepts the amount
     * of money deposited when the account is created and sets the 
     * interest rate for the account to be the current rate for savings
     * accounts.
     * 
     * @@param newMoney The amount of money deposited when the account
     *                 is opened.
     */

    public SavingsAccount( int newMoney ) {
        super( newMoney );
        setInterestRate( INTEREST_RATE );
    }

    /**
     * Withdraw money from this account. If the amount wanted is more
     * than the amount in the account, empty the account.
     * 
     * @@param amountWanted The amount of money to withdraw
     */

    public void withdrawMoney( int amountWanted ) {
        int currentBalance = getCurrentBalance();

        if( amountWanted > currentBalance ) {
            amountWanted = currentBalance;
        }

        super.withdrawMoney( amountWanted );
    }

    /**
     * Earn interest on this account. Savings accounts earn interest
     * on the entire current balance. Interest earned is considered 
     * to be a deposit.
     */

    public void earnInterest() {
        int earnedInterest = (int) Math.round(getCurrentBalance() * getInterestRate()/100.0);
        setInterestEarned( earnedInterest );
        depositMoney( earnedInterest );
    }

    /**
     * What kind of account am I?
     * 
     * @@return "SavingsAccount" 
     */

    public String toString() {
        return "SavingsAccount";
    }
} // SavingsAccount
@


1.4
log
@earnedInterest now sets interestEarned in BankAccount
@
text
@d74 1
@


1.3
log
@Fixed error with interest rate formula.
@
text
@d5 1
a5 1
 *     $Id: SavingsAccount.java,v 1.2 2013/09/14 22:22:58 agn3691 Exp agn3691 $
d9 3
d73 2
a74 1
        depositMoney( (int) Math.round(getCurrentBalance() * getInterestRate()/100.0) );
@


1.2
log
@Implemented methods.
/
@
text
@d5 1
a5 1
 *     $Id: SavingsAccount.java,v 1.1 2003/03/17 14:37:28 cs2 Exp agn3691 $
d9 4
d29 1
d43 1
a43 1
        setInterestRate( 3 );
d54 1
a54 1
        int currentBalnce = getCurrentBalance();
d57 1
a57 1
            amountWanted = currentBalnce;
d60 1
a60 1
        withdrawMoney( amountWanted );
d70 1
a70 1
        depositMoney( getCurrentBalance() * Math.round(getInterestRate()/100) );
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
 *     $Id$
d8 4
a11 1
 *     $Log$
d17 1
a17 2
 * @@author Lois Rixner
 * @@author Paul Tymann
d37 2
d49 7
d65 1
d75 1
@
