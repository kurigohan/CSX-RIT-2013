head	1.2;
access;
symbols;
locks
	andy:1.2; strict;
comment	@# @;


1.2
date	2013.09.28.06.47.50;	author andy;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.28.06.18.34;	author andy;	state Exp;
branches;
next	;


desc
@Lab 5 Activity 2
@


1.2
log
@implemented methods.
@
text
@/**
 * FindString.java
 *
 * @@author Andy Nguyen
 */

import java.io.*;

public class FindString {
     public static void main( String args[] ) throws IOException {
        String fileName = "";
        String searchString = "";
        if( args.length == 2 ) {
            searchString = args[0];
            fileName = args[1];
            readFile( searchString, fileName );
        }
        else {
            System.err.println( "Usage: java FindString search-string file-name" );
        }
    }

    private static void readFile( String searchString, String fileName ) throws IOException {
        BufferedReader br = null;
        String line = "";
        try {
            br = new BufferedReader( new FileReader( fileName ) );
            while( (line = br.readLine() ) != null ) {
                if(  line.indexOf( searchString ) > -1 ) {
                    System.out.println( line );
                }
            }
        }
        catch( IOException e ) {
            System.err.println( e );
        }
        finally {
            if( br != null ) {
                br.close();
            }
        }

    }

}

/*
 * DynamicQueue.java
 * 
 * Version: 
 *     $Id: FindString.java,v 1.1 2013/09/28 06:18:34 andy Exp andy $
 * 
 * Revisions: 
 *     $Log: FindString.java,v $
 *     Revision 1.1  2013/09/28 06:18:34  andy
 *     Initial revision
 *
 *
 */
@


1.1
log
@Initial revision
@
text
@d16 1
d23 1
a23 1
    private static void readFile( String fileName, String searchString ) throws IOException {
d28 1
a28 1
            while( (file = br.readline()) != null ) {
d51 1
a51 1
 *     $Id$
d54 4
a57 1
 *     $Log$
@
